'use client'

import { useState, useEffect } from "react";
import styles from "@/styles/AboutMeComponent.module.css";

type Language = "en" | "rus";

const AboutMeComponent: React.FC = () => {
    const [language, setLanguage] = useState<Language>("en");
    const [isAnimating, setIsAnimating] = useState(false);

    // –û–±—ä–µ–∫—Ç —Å —Ç–µ–∫—Å—Ç–∞–º–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    const aboutTexts: Record<Language, string> = {
        en: "I am a beginner frontend developer and am currently looking for my first job. I like creating beautiful and convenient interfaces, understanding technologies and seeing how code turns into a real product. I want to join a team where I can learn from experienced guys, develop as a specialist and do cool projects together. I have a lot of motivation, a desire to grow and become better every day.",
        rus: "–Ø –Ω–∞—á–∏–Ω–∞—é—â–∏–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏ —Å–µ–π—á–∞—Å –≤ –ø–æ–∏—Å–∫–µ —Å–≤–æ–µ–π –ø–µ—Ä–≤–æ–π —Ä–∞–±–æ—Ç—ã. –ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫—Ä–∞—Å–∏–≤—ã–µ –∏ —É–¥–æ–±–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã, —Ä–∞–∑–±–∏—Ä–∞—Ç—å—Å—è –≤ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö –∏ –≤–∏–¥–µ—Ç—å, –∫–∞–∫ –∫–æ–¥ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –Ω–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ–¥—É–∫—Ç. –•–æ—á—É –ø–æ–ø–∞—Å—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É, –≥–¥–µ –º–æ–∂–Ω–æ —É—á–∏—Ç—å—Å—è —É –æ–ø—ã—Ç–Ω—ã—Ö —Ä–µ–±—è—Ç, —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∫–∞–∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –∏ –≤–º–µ—Å—Ç–µ –¥–µ–ª–∞—Ç—å –∫–ª–∞—Å—Å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã. –£ –º–µ–Ω—è –º–Ω–æ–≥–æ –º–æ—Ç–∏–≤–∞—Ü–∏–∏, –∂–µ–ª–∞–Ω–∏—è —Ä–∞—Å—Ç–∏ –∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ª—É—á—à–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å."
    };

    const toggleLanguage = (): void => {
        setIsAnimating(true);

        setTimeout(() => {
            setLanguage((prevLang: Language) => prevLang === "en" ? "rus" : "en");
            setIsAnimating(false);
        }, 150);
    };

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –≤ localStorage
    useEffect(() => {
        const savedLanguage = localStorage.getItem('aboutMeLanguage') as Language | null;
        if (savedLanguage && (savedLanguage === 'en' || savedLanguage === 'rus')) {
            setLanguage(savedLanguage);
        }
    }, []);

    useEffect(() => {
        localStorage.setItem('aboutMeLanguage', language);
    }, [language]);

    return (
        <section className={styles.aboutMe}>
            <div className={styles.header}>
                <h1 className={styles.title}>About Me</h1>
                <button
                    className={styles.languageToggle}
                    onClick={toggleLanguage}
                    aria-label={`Switch to ${language === 'en' ? 'Russian' : 'English'}`}
                    disabled={isAnimating}
                >
                    <span className={styles.languageIcon}>üåê</span>
                    {language.toUpperCase()}
                </button>
            </div>

            <div className={styles.content}>
                <p className={`${styles.text} ${isAnimating ? styles.fadeOut : styles.fadeIn}`}>
                    {aboutTexts[language]}
                </p>
            </div>
        </section>
    );
};

export default AboutMeComponent;